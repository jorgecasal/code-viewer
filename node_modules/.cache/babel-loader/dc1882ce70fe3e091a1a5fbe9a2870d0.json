{"ast":null,"code":"import _slicedToArray from\"/Users/cdlc/Desktop/github/project portfolio/code-viewer/codeviewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'codemirror/lib/codemirror.css';import'codemirror/theme/elegant.css';import'codemirror/mode/xml/xml';import'codemirror/mode/css/css';import'codemirror/mode/javascript/javascript';import{Controlled as ControlledEditor}from'react-codemirror2';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faMinusSquare,faPlusSquare}from'@fortawesome/free-solid-svg-icons';export default function Editor(_ref){var displayName=_ref.displayName,language=_ref.language,value=_ref.value,onChange=_ref.onChange;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];function handleChange(editor,data,value){onChange(value);}return/*#__PURE__*/React.createElement(\"div\",{className:\"editor-container \".concat(open?'':'collapsed')},/*#__PURE__*/React.createElement(\"div\",{className:\"editor-title\"},displayName,/*#__PURE__*/React.createElement(\"button\",{className:\"btn\",type:\"button\",onClick:function onClick(){return setOpen(function(prevOpen){return!prevOpen;});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:open?faMinusSquare:faPlusSquare}))),/*#__PURE__*/React.createElement(ControlledEditor,{className:\"code-mirror-wrapper\",onBeforeChange:handleChange,value:value,options:{lineWrapping:true,lint:true,mode:language,theme:'elegant',lineNumbers:true}}));}","map":{"version":3,"sources":["/Users/cdlc/Desktop/github/project portfolio/code-viewer/codeviewer/src/components/Editor.js"],"names":["React","useState","Controlled","ControlledEditor","FontAwesomeIcon","faMinusSquare","faPlusSquare","Editor","displayName","language","value","onChange","open","setOpen","handleChange","editor","data","prevOpen","lineWrapping","lint","mode","theme","lineNumbers"],"mappings":"0LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAA+B,OAA/B,CACA,MAAO,+BAAP,CACA,MAAO,8BAAP,CACA,MAAO,yBAAP,CACA,MAAO,yBAAP,CACA,MAAO,uCAAP,CACA,OAASC,UAAU,GAAIC,CAAAA,gBAAvB,KAA+C,mBAA/C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,aAAT,CAAwBC,YAAxB,KAA2C,mCAA3C,CAEA,cAAe,SAASC,CAAAA,MAAT,MAA0D,IAAzCC,CAAAA,WAAyC,MAAzCA,WAAyC,CAA5BC,QAA4B,MAA5BA,QAA4B,CAAlBC,KAAkB,MAAlBA,KAAkB,CAAXC,QAAW,MAAXA,QAAW,eAC3CV,QAAQ,CAAC,IAAD,CADmC,wCAC7DW,IAD6D,eACvDC,OADuD,eAErE,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA8BC,IAA9B,CAAoCN,KAApC,CAA0C,CACtCC,QAAQ,CAACD,KAAD,CAAR,CACH,CACD,mBACI,2BAAK,SAAS,4BAAsBE,IAAI,CAAG,EAAH,CAAQ,WAAlC,CAAd,eACI,2BAAK,SAAS,CAAC,cAAf,EACKJ,WADL,cAEI,8BAAQ,SAAS,CAAC,KAAlB,CAAwB,IAAI,CAAC,QAA7B,CAAsC,OAAO,CAAE,yBAAKK,CAAAA,OAAO,CAAC,SAAAI,QAAQ,QAAI,CAACA,QAAL,EAAT,CAAZ,EAA/C,eACA,oBAAC,eAAD,EAAiB,IAAI,CAAGL,IAAI,CAAGP,aAAH,CAAmBC,YAA/C,EADA,CAFJ,CADJ,cAOI,oBAAC,gBAAD,EACI,SAAS,CAAC,qBADd,CAEI,cAAc,CAAEQ,YAFpB,CAGI,KAAK,CAAEJ,KAHX,CAII,OAAO,CAAE,CACLQ,YAAY,CAAE,IADT,CAELC,IAAI,CAAE,IAFD,CAGLC,IAAI,CAAEX,QAHD,CAILY,KAAK,CAAE,SAJF,CAKLC,WAAW,CAAE,IALR,CAJb,EAPJ,CADJ,CAsBH","sourcesContent":["import React, { useState }from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/elegant.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/css/css'\nimport 'codemirror/mode/javascript/javascript'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinusSquare, faPlusSquare} from '@fortawesome/free-solid-svg-icons'\n\nexport default function Editor({displayName, language, value, onChange}) {\n    const [ open, setOpen ] = useState(true);\n    function handleChange(editor, data, value){\n        onChange(value)\n    }\n    return (\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n            <div className=\"editor-title\">\n                {displayName}\n                <button className=\"btn\" type=\"button\" onClick={()=> setOpen(prevOpen => !prevOpen)}>\n                <FontAwesomeIcon icon={ open ? faMinusSquare : faPlusSquare}/>\n                </button>\n            </div>\n            <ControlledEditor\n                className=\"code-mirror-wrapper\"\n                onBeforeChange={handleChange}\n                value={value}\n                options={{\n                    lineWrapping: true,\n                    lint: true,\n                    mode: language,\n                    theme: 'elegant',\n                    lineNumbers: true,\n                }}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}