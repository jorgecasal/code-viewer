{"ast":null,"code":"import _slicedToArray from\"/Users/cdlc/Desktop/github/project portfolio/code-viewer/codeviewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';var PREFIX='code-viewer-';export default function useLocalStorage(key,initialValue){var prefixedKey=PREFIX+key;var _useState=useState(function(){var jsonValue=localStorage.getItem(prefixedKey);if(jsonValue!=null)return JSON.parse(jsonValue);if(typeof initialValue==='function'){return initialValue();}else{return initialValue;}}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];useEffect(function(){localStorage.setItem(prefixedKey,JSON.stringify(value));},[prefixedKey,value]);return[value,setValue];}","map":{"version":3,"sources":["/Users/cdlc/Desktop/github/project portfolio/code-viewer/codeviewer/src/hooks/useLocalStorage.js"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify"],"mappings":"0LAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,MAAM,CAAG,cAAf,CAEA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,GAAzB,CAA8BC,YAA9B,CAA4C,CAEvD,GAAMC,CAAAA,WAAW,CAAGJ,MAAM,CAAGE,GAA7B,CAFuD,cAI7BH,QAAQ,CAAC,UAAI,CACnC,GAAMM,CAAAA,SAAS,CAAGC,YAAY,CAACC,OAAb,CAAqBH,WAArB,CAAlB,CACA,GAAGC,SAAS,EAAI,IAAhB,CAAuB,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP,CACvB,GAAG,MAAOF,CAAAA,YAAP,GAAwB,UAA3B,CAAuC,CACnC,MAAOA,CAAAA,YAAY,EAAnB,CACH,CAFD,IAEO,CACH,MAAOA,CAAAA,YAAP,CACH,CACJ,CARiC,CAJqB,wCAIhDO,KAJgD,eAIzCC,QAJyC,eAcvDb,SAAS,CAAC,UAAI,CACVQ,YAAY,CAACM,OAAb,CAAqBR,WAArB,CAAkCI,IAAI,CAACK,SAAL,CAAeH,KAAf,CAAlC,EACH,CAFQ,CAEN,CAACN,WAAD,CAAcM,KAAd,CAFM,CAAT,CAIA,MAAO,CAACA,KAAD,CAAQC,QAAR,CAAP,CACH","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst PREFIX = 'code-viewer-'\n\nexport default function useLocalStorage(key, initialValue) {\n\n    const prefixedKey = PREFIX + key\n\n    const [value, setValue] = useState(()=>{\n        const jsonValue = localStorage.getItem(prefixedKey);\n        if(jsonValue != null ) return JSON.parse(jsonValue);\n        if(typeof initialValue === 'function' ){\n            return initialValue();\n        } else {\n            return initialValue\n        }\n    });\n\n    useEffect(()=>{\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\n    }, [prefixedKey, value]);\n\n    return [value, setValue]\n}\n"]},"metadata":{},"sourceType":"module"}